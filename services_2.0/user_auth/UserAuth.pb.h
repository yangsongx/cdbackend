// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserAuth.proto

#ifndef PROTOBUF_UserAuth_2eproto__INCLUDED
#define PROTOBUF_UserAuth_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace caredear {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_UserAuth_2eproto();
void protobuf_AssignDesc_UserAuth_2eproto();
void protobuf_ShutdownFile_UserAuth_2eproto();

class AuthRequest;
class AuthResponse;

// ===================================================================

class AuthRequest : public ::google::protobuf::Message {
 public:
  AuthRequest();
  virtual ~AuthRequest();

  AuthRequest(const AuthRequest& from);

  inline AuthRequest& operator=(const AuthRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthRequest& default_instance();

  void Swap(AuthRequest* other);

  // implements Message ----------------------------------------------

  AuthRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthRequest& from);
  void MergeFrom(const AuthRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string auth_token = 1;
  inline bool has_auth_token() const;
  inline void clear_auth_token();
  static const int kAuthTokenFieldNumber = 1;
  inline const ::std::string& auth_token() const;
  inline void set_auth_token(const ::std::string& value);
  inline void set_auth_token(const char* value);
  inline void set_auth_token(const char* value, size_t size);
  inline ::std::string* mutable_auth_token();
  inline ::std::string* release_auth_token();
  inline void set_allocated_auth_token(::std::string* auth_token);

  // required string auth_session = 2;
  inline bool has_auth_session() const;
  inline void clear_auth_session();
  static const int kAuthSessionFieldNumber = 2;
  inline const ::std::string& auth_session() const;
  inline void set_auth_session(const ::std::string& value);
  inline void set_auth_session(const char* value);
  inline void set_auth_session(const char* value, size_t size);
  inline ::std::string* mutable_auth_session();
  inline ::std::string* release_auth_session();
  inline void set_allocated_auth_session(::std::string* auth_session);

  // required int32 auth_sysid = 3;
  inline bool has_auth_sysid() const;
  inline void clear_auth_sysid();
  static const int kAuthSysidFieldNumber = 3;
  inline ::google::protobuf::int32 auth_sysid() const;
  inline void set_auth_sysid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.caredear.AuthRequest)
 private:
  inline void set_has_auth_token();
  inline void clear_has_auth_token();
  inline void set_has_auth_session();
  inline void clear_has_auth_session();
  inline void set_has_auth_sysid();
  inline void clear_has_auth_sysid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* auth_token_;
  ::std::string* auth_session_;
  ::google::protobuf::int32 auth_sysid_;
  friend void  protobuf_AddDesc_UserAuth_2eproto();
  friend void protobuf_AssignDesc_UserAuth_2eproto();
  friend void protobuf_ShutdownFile_UserAuth_2eproto();

  void InitAsDefaultInstance();
  static AuthRequest* default_instance_;
};
// -------------------------------------------------------------------

class AuthResponse : public ::google::protobuf::Message {
 public:
  AuthResponse();
  virtual ~AuthResponse();

  AuthResponse(const AuthResponse& from);

  inline AuthResponse& operator=(const AuthResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthResponse& default_instance();

  void Swap(AuthResponse* other);

  // implements Message ----------------------------------------------

  AuthResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AuthResponse& from);
  void MergeFrom(const AuthResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result_code = 1;
  inline bool has_result_code() const;
  inline void clear_result_code();
  static const int kResultCodeFieldNumber = 1;
  inline ::google::protobuf::int32 result_code() const;
  inline void set_result_code(::google::protobuf::int32 value);

  // optional string extra_msg = 2;
  inline bool has_extra_msg() const;
  inline void clear_extra_msg();
  static const int kExtraMsgFieldNumber = 2;
  inline const ::std::string& extra_msg() const;
  inline void set_extra_msg(const ::std::string& value);
  inline void set_extra_msg(const char* value);
  inline void set_extra_msg(const char* value, size_t size);
  inline ::std::string* mutable_extra_msg();
  inline ::std::string* release_extra_msg();
  inline void set_allocated_extra_msg(::std::string* extra_msg);

  // @@protoc_insertion_point(class_scope:com.caredear.AuthResponse)
 private:
  inline void set_has_result_code();
  inline void clear_has_result_code();
  inline void set_has_extra_msg();
  inline void clear_has_extra_msg();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* extra_msg_;
  ::google::protobuf::int32 result_code_;
  friend void  protobuf_AddDesc_UserAuth_2eproto();
  friend void protobuf_AssignDesc_UserAuth_2eproto();
  friend void protobuf_ShutdownFile_UserAuth_2eproto();

  void InitAsDefaultInstance();
  static AuthResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// AuthRequest

// required string auth_token = 1;
inline bool AuthRequest::has_auth_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthRequest::set_has_auth_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthRequest::clear_has_auth_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthRequest::clear_auth_token() {
  if (auth_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    auth_token_->clear();
  }
  clear_has_auth_token();
}
inline const ::std::string& AuthRequest::auth_token() const {
  // @@protoc_insertion_point(field_get:com.caredear.AuthRequest.auth_token)
  return *auth_token_;
}
inline void AuthRequest::set_auth_token(const ::std::string& value) {
  set_has_auth_token();
  if (auth_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    auth_token_ = new ::std::string;
  }
  auth_token_->assign(value);
  // @@protoc_insertion_point(field_set:com.caredear.AuthRequest.auth_token)
}
inline void AuthRequest::set_auth_token(const char* value) {
  set_has_auth_token();
  if (auth_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    auth_token_ = new ::std::string;
  }
  auth_token_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.caredear.AuthRequest.auth_token)
}
inline void AuthRequest::set_auth_token(const char* value, size_t size) {
  set_has_auth_token();
  if (auth_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    auth_token_ = new ::std::string;
  }
  auth_token_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.caredear.AuthRequest.auth_token)
}
inline ::std::string* AuthRequest::mutable_auth_token() {
  set_has_auth_token();
  if (auth_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    auth_token_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.caredear.AuthRequest.auth_token)
  return auth_token_;
}
inline ::std::string* AuthRequest::release_auth_token() {
  clear_has_auth_token();
  if (auth_token_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = auth_token_;
    auth_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AuthRequest::set_allocated_auth_token(::std::string* auth_token) {
  if (auth_token_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete auth_token_;
  }
  if (auth_token) {
    set_has_auth_token();
    auth_token_ = auth_token;
  } else {
    clear_has_auth_token();
    auth_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.caredear.AuthRequest.auth_token)
}

// required string auth_session = 2;
inline bool AuthRequest::has_auth_session() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthRequest::set_has_auth_session() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthRequest::clear_has_auth_session() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthRequest::clear_auth_session() {
  if (auth_session_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    auth_session_->clear();
  }
  clear_has_auth_session();
}
inline const ::std::string& AuthRequest::auth_session() const {
  // @@protoc_insertion_point(field_get:com.caredear.AuthRequest.auth_session)
  return *auth_session_;
}
inline void AuthRequest::set_auth_session(const ::std::string& value) {
  set_has_auth_session();
  if (auth_session_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    auth_session_ = new ::std::string;
  }
  auth_session_->assign(value);
  // @@protoc_insertion_point(field_set:com.caredear.AuthRequest.auth_session)
}
inline void AuthRequest::set_auth_session(const char* value) {
  set_has_auth_session();
  if (auth_session_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    auth_session_ = new ::std::string;
  }
  auth_session_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.caredear.AuthRequest.auth_session)
}
inline void AuthRequest::set_auth_session(const char* value, size_t size) {
  set_has_auth_session();
  if (auth_session_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    auth_session_ = new ::std::string;
  }
  auth_session_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.caredear.AuthRequest.auth_session)
}
inline ::std::string* AuthRequest::mutable_auth_session() {
  set_has_auth_session();
  if (auth_session_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    auth_session_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.caredear.AuthRequest.auth_session)
  return auth_session_;
}
inline ::std::string* AuthRequest::release_auth_session() {
  clear_has_auth_session();
  if (auth_session_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = auth_session_;
    auth_session_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AuthRequest::set_allocated_auth_session(::std::string* auth_session) {
  if (auth_session_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete auth_session_;
  }
  if (auth_session) {
    set_has_auth_session();
    auth_session_ = auth_session;
  } else {
    clear_has_auth_session();
    auth_session_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.caredear.AuthRequest.auth_session)
}

// required int32 auth_sysid = 3;
inline bool AuthRequest::has_auth_sysid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AuthRequest::set_has_auth_sysid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AuthRequest::clear_has_auth_sysid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AuthRequest::clear_auth_sysid() {
  auth_sysid_ = 0;
  clear_has_auth_sysid();
}
inline ::google::protobuf::int32 AuthRequest::auth_sysid() const {
  // @@protoc_insertion_point(field_get:com.caredear.AuthRequest.auth_sysid)
  return auth_sysid_;
}
inline void AuthRequest::set_auth_sysid(::google::protobuf::int32 value) {
  set_has_auth_sysid();
  auth_sysid_ = value;
  // @@protoc_insertion_point(field_set:com.caredear.AuthRequest.auth_sysid)
}

// -------------------------------------------------------------------

// AuthResponse

// required int32 result_code = 1;
inline bool AuthResponse::has_result_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AuthResponse::set_has_result_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AuthResponse::clear_has_result_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AuthResponse::clear_result_code() {
  result_code_ = 0;
  clear_has_result_code();
}
inline ::google::protobuf::int32 AuthResponse::result_code() const {
  // @@protoc_insertion_point(field_get:com.caredear.AuthResponse.result_code)
  return result_code_;
}
inline void AuthResponse::set_result_code(::google::protobuf::int32 value) {
  set_has_result_code();
  result_code_ = value;
  // @@protoc_insertion_point(field_set:com.caredear.AuthResponse.result_code)
}

// optional string extra_msg = 2;
inline bool AuthResponse::has_extra_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AuthResponse::set_has_extra_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AuthResponse::clear_has_extra_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AuthResponse::clear_extra_msg() {
  if (extra_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extra_msg_->clear();
  }
  clear_has_extra_msg();
}
inline const ::std::string& AuthResponse::extra_msg() const {
  // @@protoc_insertion_point(field_get:com.caredear.AuthResponse.extra_msg)
  return *extra_msg_;
}
inline void AuthResponse::set_extra_msg(const ::std::string& value) {
  set_has_extra_msg();
  if (extra_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extra_msg_ = new ::std::string;
  }
  extra_msg_->assign(value);
  // @@protoc_insertion_point(field_set:com.caredear.AuthResponse.extra_msg)
}
inline void AuthResponse::set_extra_msg(const char* value) {
  set_has_extra_msg();
  if (extra_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extra_msg_ = new ::std::string;
  }
  extra_msg_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.caredear.AuthResponse.extra_msg)
}
inline void AuthResponse::set_extra_msg(const char* value, size_t size) {
  set_has_extra_msg();
  if (extra_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extra_msg_ = new ::std::string;
  }
  extra_msg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.caredear.AuthResponse.extra_msg)
}
inline ::std::string* AuthResponse::mutable_extra_msg() {
  set_has_extra_msg();
  if (extra_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extra_msg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.caredear.AuthResponse.extra_msg)
  return extra_msg_;
}
inline ::std::string* AuthResponse::release_extra_msg() {
  clear_has_extra_msg();
  if (extra_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = extra_msg_;
    extra_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AuthResponse::set_allocated_extra_msg(::std::string* extra_msg) {
  if (extra_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extra_msg_;
  }
  if (extra_msg) {
    set_has_extra_msg();
    extra_msg_ = extra_msg;
  } else {
    clear_has_extra_msg();
    extra_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.caredear.AuthResponse.extra_msg)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace caredear
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_UserAuth_2eproto__INCLUDED
