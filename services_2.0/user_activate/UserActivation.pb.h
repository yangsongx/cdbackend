// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserActivation.proto

#ifndef PROTOBUF_UserActivation_2eproto__INCLUDED
#define PROTOBUF_UserActivation_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "CommonUserCenter.pb.h"
// @@protoc_insertion_point(includes)

namespace com {
namespace caredear {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_UserActivation_2eproto();
void protobuf_AssignDesc_UserActivation_2eproto();
void protobuf_ShutdownFile_UserActivation_2eproto();

class ActivateRequest;
class ActivateResponse;

// ===================================================================

class ActivateRequest : public ::google::protobuf::Message {
 public:
  ActivateRequest();
  virtual ~ActivateRequest();

  ActivateRequest(const ActivateRequest& from);

  inline ActivateRequest& operator=(const ActivateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivateRequest& default_instance();

  void Swap(ActivateRequest* other);

  // implements Message ----------------------------------------------

  ActivateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivateRequest& from);
  void MergeFrom(const ActivateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .com.caredear.RegLoginType activate_type = 1;
  inline bool has_activate_type() const;
  inline void clear_activate_type();
  static const int kActivateTypeFieldNumber = 1;
  inline ::com::caredear::RegLoginType activate_type() const;
  inline void set_activate_type(::com::caredear::RegLoginType value);

  // required string activate_name = 2;
  inline bool has_activate_name() const;
  inline void clear_activate_name();
  static const int kActivateNameFieldNumber = 2;
  inline const ::std::string& activate_name() const;
  inline void set_activate_name(const ::std::string& value);
  inline void set_activate_name(const char* value);
  inline void set_activate_name(const char* value, size_t size);
  inline ::std::string* mutable_activate_name();
  inline ::std::string* release_activate_name();
  inline void set_allocated_activate_name(::std::string* activate_name);

  // required string activate_code = 3;
  inline bool has_activate_code() const;
  inline void clear_activate_code();
  static const int kActivateCodeFieldNumber = 3;
  inline const ::std::string& activate_code() const;
  inline void set_activate_code(const ::std::string& value);
  inline void set_activate_code(const char* value);
  inline void set_activate_code(const char* value, size_t size);
  inline ::std::string* mutable_activate_code();
  inline ::std::string* release_activate_code();
  inline void set_allocated_activate_code(::std::string* activate_code);

  // @@protoc_insertion_point(class_scope:com.caredear.ActivateRequest)
 private:
  inline void set_has_activate_type();
  inline void clear_has_activate_type();
  inline void set_has_activate_name();
  inline void clear_has_activate_name();
  inline void set_has_activate_code();
  inline void clear_has_activate_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* activate_name_;
  ::std::string* activate_code_;
  int activate_type_;
  friend void  protobuf_AddDesc_UserActivation_2eproto();
  friend void protobuf_AssignDesc_UserActivation_2eproto();
  friend void protobuf_ShutdownFile_UserActivation_2eproto();

  void InitAsDefaultInstance();
  static ActivateRequest* default_instance_;
};
// -------------------------------------------------------------------

class ActivateResponse : public ::google::protobuf::Message {
 public:
  ActivateResponse();
  virtual ~ActivateResponse();

  ActivateResponse(const ActivateResponse& from);

  inline ActivateResponse& operator=(const ActivateResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActivateResponse& default_instance();

  void Swap(ActivateResponse* other);

  // implements Message ----------------------------------------------

  ActivateResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ActivateResponse& from);
  void MergeFrom(const ActivateResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 result_code = 1;
  inline bool has_result_code() const;
  inline void clear_result_code();
  static const int kResultCodeFieldNumber = 1;
  inline ::google::protobuf::int32 result_code() const;
  inline void set_result_code(::google::protobuf::int32 value);

  // optional string extra_msg = 2;
  inline bool has_extra_msg() const;
  inline void clear_extra_msg();
  static const int kExtraMsgFieldNumber = 2;
  inline const ::std::string& extra_msg() const;
  inline void set_extra_msg(const ::std::string& value);
  inline void set_extra_msg(const char* value);
  inline void set_extra_msg(const char* value, size_t size);
  inline ::std::string* mutable_extra_msg();
  inline ::std::string* release_extra_msg();
  inline void set_allocated_extra_msg(::std::string* extra_msg);

  // optional uint64 caredear_id = 3;
  inline bool has_caredear_id() const;
  inline void clear_caredear_id();
  static const int kCaredearIdFieldNumber = 3;
  inline ::google::protobuf::uint64 caredear_id() const;
  inline void set_caredear_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:com.caredear.ActivateResponse)
 private:
  inline void set_has_result_code();
  inline void clear_has_result_code();
  inline void set_has_extra_msg();
  inline void clear_has_extra_msg();
  inline void set_has_caredear_id();
  inline void clear_has_caredear_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* extra_msg_;
  ::google::protobuf::uint64 caredear_id_;
  ::google::protobuf::int32 result_code_;
  friend void  protobuf_AddDesc_UserActivation_2eproto();
  friend void protobuf_AssignDesc_UserActivation_2eproto();
  friend void protobuf_ShutdownFile_UserActivation_2eproto();

  void InitAsDefaultInstance();
  static ActivateResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// ActivateRequest

// required .com.caredear.RegLoginType activate_type = 1;
inline bool ActivateRequest::has_activate_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivateRequest::set_has_activate_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivateRequest::clear_has_activate_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivateRequest::clear_activate_type() {
  activate_type_ = 1;
  clear_has_activate_type();
}
inline ::com::caredear::RegLoginType ActivateRequest::activate_type() const {
  // @@protoc_insertion_point(field_get:com.caredear.ActivateRequest.activate_type)
  return static_cast< ::com::caredear::RegLoginType >(activate_type_);
}
inline void ActivateRequest::set_activate_type(::com::caredear::RegLoginType value) {
  assert(::com::caredear::RegLoginType_IsValid(value));
  set_has_activate_type();
  activate_type_ = value;
  // @@protoc_insertion_point(field_set:com.caredear.ActivateRequest.activate_type)
}

// required string activate_name = 2;
inline bool ActivateRequest::has_activate_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActivateRequest::set_has_activate_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActivateRequest::clear_has_activate_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActivateRequest::clear_activate_name() {
  if (activate_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    activate_name_->clear();
  }
  clear_has_activate_name();
}
inline const ::std::string& ActivateRequest::activate_name() const {
  // @@protoc_insertion_point(field_get:com.caredear.ActivateRequest.activate_name)
  return *activate_name_;
}
inline void ActivateRequest::set_activate_name(const ::std::string& value) {
  set_has_activate_name();
  if (activate_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    activate_name_ = new ::std::string;
  }
  activate_name_->assign(value);
  // @@protoc_insertion_point(field_set:com.caredear.ActivateRequest.activate_name)
}
inline void ActivateRequest::set_activate_name(const char* value) {
  set_has_activate_name();
  if (activate_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    activate_name_ = new ::std::string;
  }
  activate_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.caredear.ActivateRequest.activate_name)
}
inline void ActivateRequest::set_activate_name(const char* value, size_t size) {
  set_has_activate_name();
  if (activate_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    activate_name_ = new ::std::string;
  }
  activate_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.caredear.ActivateRequest.activate_name)
}
inline ::std::string* ActivateRequest::mutable_activate_name() {
  set_has_activate_name();
  if (activate_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    activate_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.caredear.ActivateRequest.activate_name)
  return activate_name_;
}
inline ::std::string* ActivateRequest::release_activate_name() {
  clear_has_activate_name();
  if (activate_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = activate_name_;
    activate_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ActivateRequest::set_allocated_activate_name(::std::string* activate_name) {
  if (activate_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete activate_name_;
  }
  if (activate_name) {
    set_has_activate_name();
    activate_name_ = activate_name;
  } else {
    clear_has_activate_name();
    activate_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.caredear.ActivateRequest.activate_name)
}

// required string activate_code = 3;
inline bool ActivateRequest::has_activate_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActivateRequest::set_has_activate_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActivateRequest::clear_has_activate_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActivateRequest::clear_activate_code() {
  if (activate_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    activate_code_->clear();
  }
  clear_has_activate_code();
}
inline const ::std::string& ActivateRequest::activate_code() const {
  // @@protoc_insertion_point(field_get:com.caredear.ActivateRequest.activate_code)
  return *activate_code_;
}
inline void ActivateRequest::set_activate_code(const ::std::string& value) {
  set_has_activate_code();
  if (activate_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    activate_code_ = new ::std::string;
  }
  activate_code_->assign(value);
  // @@protoc_insertion_point(field_set:com.caredear.ActivateRequest.activate_code)
}
inline void ActivateRequest::set_activate_code(const char* value) {
  set_has_activate_code();
  if (activate_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    activate_code_ = new ::std::string;
  }
  activate_code_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.caredear.ActivateRequest.activate_code)
}
inline void ActivateRequest::set_activate_code(const char* value, size_t size) {
  set_has_activate_code();
  if (activate_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    activate_code_ = new ::std::string;
  }
  activate_code_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.caredear.ActivateRequest.activate_code)
}
inline ::std::string* ActivateRequest::mutable_activate_code() {
  set_has_activate_code();
  if (activate_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    activate_code_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.caredear.ActivateRequest.activate_code)
  return activate_code_;
}
inline ::std::string* ActivateRequest::release_activate_code() {
  clear_has_activate_code();
  if (activate_code_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = activate_code_;
    activate_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ActivateRequest::set_allocated_activate_code(::std::string* activate_code) {
  if (activate_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete activate_code_;
  }
  if (activate_code) {
    set_has_activate_code();
    activate_code_ = activate_code;
  } else {
    clear_has_activate_code();
    activate_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.caredear.ActivateRequest.activate_code)
}

// -------------------------------------------------------------------

// ActivateResponse

// required int32 result_code = 1;
inline bool ActivateResponse::has_result_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ActivateResponse::set_has_result_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ActivateResponse::clear_has_result_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ActivateResponse::clear_result_code() {
  result_code_ = 0;
  clear_has_result_code();
}
inline ::google::protobuf::int32 ActivateResponse::result_code() const {
  // @@protoc_insertion_point(field_get:com.caredear.ActivateResponse.result_code)
  return result_code_;
}
inline void ActivateResponse::set_result_code(::google::protobuf::int32 value) {
  set_has_result_code();
  result_code_ = value;
  // @@protoc_insertion_point(field_set:com.caredear.ActivateResponse.result_code)
}

// optional string extra_msg = 2;
inline bool ActivateResponse::has_extra_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ActivateResponse::set_has_extra_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ActivateResponse::clear_has_extra_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ActivateResponse::clear_extra_msg() {
  if (extra_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extra_msg_->clear();
  }
  clear_has_extra_msg();
}
inline const ::std::string& ActivateResponse::extra_msg() const {
  // @@protoc_insertion_point(field_get:com.caredear.ActivateResponse.extra_msg)
  return *extra_msg_;
}
inline void ActivateResponse::set_extra_msg(const ::std::string& value) {
  set_has_extra_msg();
  if (extra_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extra_msg_ = new ::std::string;
  }
  extra_msg_->assign(value);
  // @@protoc_insertion_point(field_set:com.caredear.ActivateResponse.extra_msg)
}
inline void ActivateResponse::set_extra_msg(const char* value) {
  set_has_extra_msg();
  if (extra_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extra_msg_ = new ::std::string;
  }
  extra_msg_->assign(value);
  // @@protoc_insertion_point(field_set_char:com.caredear.ActivateResponse.extra_msg)
}
inline void ActivateResponse::set_extra_msg(const char* value, size_t size) {
  set_has_extra_msg();
  if (extra_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extra_msg_ = new ::std::string;
  }
  extra_msg_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.caredear.ActivateResponse.extra_msg)
}
inline ::std::string* ActivateResponse::mutable_extra_msg() {
  set_has_extra_msg();
  if (extra_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    extra_msg_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:com.caredear.ActivateResponse.extra_msg)
  return extra_msg_;
}
inline ::std::string* ActivateResponse::release_extra_msg() {
  clear_has_extra_msg();
  if (extra_msg_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = extra_msg_;
    extra_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ActivateResponse::set_allocated_extra_msg(::std::string* extra_msg) {
  if (extra_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extra_msg_;
  }
  if (extra_msg) {
    set_has_extra_msg();
    extra_msg_ = extra_msg;
  } else {
    clear_has_extra_msg();
    extra_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:com.caredear.ActivateResponse.extra_msg)
}

// optional uint64 caredear_id = 3;
inline bool ActivateResponse::has_caredear_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ActivateResponse::set_has_caredear_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ActivateResponse::clear_has_caredear_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ActivateResponse::clear_caredear_id() {
  caredear_id_ = GOOGLE_ULONGLONG(0);
  clear_has_caredear_id();
}
inline ::google::protobuf::uint64 ActivateResponse::caredear_id() const {
  // @@protoc_insertion_point(field_get:com.caredear.ActivateResponse.caredear_id)
  return caredear_id_;
}
inline void ActivateResponse::set_caredear_id(::google::protobuf::uint64 value) {
  set_has_caredear_id();
  caredear_id_ = value;
  // @@protoc_insertion_point(field_set:com.caredear.ActivateResponse.caredear_id)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace caredear
}  // namespace com

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_UserActivation_2eproto__INCLUDED
