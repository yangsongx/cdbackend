// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserActivation.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "UserActivation.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace caredear {

namespace {

const ::google::protobuf::Descriptor* ActivateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActivateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ActivateResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ActivateResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_UserActivation_2eproto() {
  protobuf_AddDesc_UserActivation_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "UserActivation.proto");
  GOOGLE_CHECK(file != NULL);
  ActivateRequest_descriptor_ = file->message_type(0);
  static const int ActivateRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivateRequest, activate_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivateRequest, activate_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivateRequest, activate_code_),
  };
  ActivateRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActivateRequest_descriptor_,
      ActivateRequest::default_instance_,
      ActivateRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivateRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivateRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActivateRequest));
  ActivateResponse_descriptor_ = file->message_type(1);
  static const int ActivateResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivateResponse, result_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivateResponse, extra_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivateResponse, caredear_id_),
  };
  ActivateResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ActivateResponse_descriptor_,
      ActivateResponse::default_instance_,
      ActivateResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivateResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ActivateResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ActivateResponse));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_UserActivation_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActivateRequest_descriptor_, &ActivateRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ActivateResponse_descriptor_, &ActivateResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_UserActivation_2eproto() {
  delete ActivateRequest::default_instance_;
  delete ActivateRequest_reflection_;
  delete ActivateResponse::default_instance_;
  delete ActivateResponse_reflection_;
}

void protobuf_AddDesc_UserActivation_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::com::caredear::protobuf_AddDesc_CommonUserCenter_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024UserActivation.proto\022\014com.caredear\032\026Co"
    "mmonUserCenter.proto\"r\n\017ActivateRequest\022"
    "1\n\ractivate_type\030\001 \002(\0162\032.com.caredear.Re"
    "gLoginType\022\025\n\ractivate_name\030\002 \002(\t\022\025\n\ract"
    "ivate_code\030\003 \002(\t\"O\n\020ActivateResponse\022\023\n\013"
    "result_code\030\001 \002(\005\022\021\n\textra_msg\030\002 \001(\t\022\023\n\013"
    "caredear_id\030\003 \001(\004", 257);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "UserActivation.proto", &protobuf_RegisterTypes);
  ActivateRequest::default_instance_ = new ActivateRequest();
  ActivateResponse::default_instance_ = new ActivateResponse();
  ActivateRequest::default_instance_->InitAsDefaultInstance();
  ActivateResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_UserActivation_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_UserActivation_2eproto {
  StaticDescriptorInitializer_UserActivation_2eproto() {
    protobuf_AddDesc_UserActivation_2eproto();
  }
} static_descriptor_initializer_UserActivation_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int ActivateRequest::kActivateTypeFieldNumber;
const int ActivateRequest::kActivateNameFieldNumber;
const int ActivateRequest::kActivateCodeFieldNumber;
#endif  // !_MSC_VER

ActivateRequest::ActivateRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.caredear.ActivateRequest)
}

void ActivateRequest::InitAsDefaultInstance() {
}

ActivateRequest::ActivateRequest(const ActivateRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.caredear.ActivateRequest)
}

void ActivateRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  activate_type_ = 1;
  activate_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  activate_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActivateRequest::~ActivateRequest() {
  // @@protoc_insertion_point(destructor:com.caredear.ActivateRequest)
  SharedDtor();
}

void ActivateRequest::SharedDtor() {
  if (activate_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete activate_name_;
  }
  if (activate_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete activate_code_;
  }
  if (this != default_instance_) {
  }
}

void ActivateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActivateRequest_descriptor_;
}

const ActivateRequest& ActivateRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserActivation_2eproto();
  return *default_instance_;
}

ActivateRequest* ActivateRequest::default_instance_ = NULL;

ActivateRequest* ActivateRequest::New() const {
  return new ActivateRequest;
}

void ActivateRequest::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    activate_type_ = 1;
    if (has_activate_name()) {
      if (activate_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        activate_name_->clear();
      }
    }
    if (has_activate_code()) {
      if (activate_code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        activate_code_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ActivateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.caredear.ActivateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.caredear.RegLoginType activate_type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::com::caredear::RegLoginType_IsValid(value)) {
            set_activate_type(static_cast< ::com::caredear::RegLoginType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_activate_name;
        break;
      }

      // required string activate_name = 2;
      case 2: {
        if (tag == 18) {
         parse_activate_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_activate_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->activate_name().data(), this->activate_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "activate_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_activate_code;
        break;
      }

      // required string activate_code = 3;
      case 3: {
        if (tag == 26) {
         parse_activate_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_activate_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->activate_code().data(), this->activate_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "activate_code");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.caredear.ActivateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.caredear.ActivateRequest)
  return false;
#undef DO_
}

void ActivateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.caredear.ActivateRequest)
  // required .com.caredear.RegLoginType activate_type = 1;
  if (has_activate_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->activate_type(), output);
  }

  // required string activate_name = 2;
  if (has_activate_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->activate_name().data(), this->activate_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "activate_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->activate_name(), output);
  }

  // required string activate_code = 3;
  if (has_activate_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->activate_code().data(), this->activate_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "activate_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->activate_code(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.caredear.ActivateRequest)
}

::google::protobuf::uint8* ActivateRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.caredear.ActivateRequest)
  // required .com.caredear.RegLoginType activate_type = 1;
  if (has_activate_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->activate_type(), target);
  }

  // required string activate_name = 2;
  if (has_activate_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->activate_name().data(), this->activate_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "activate_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->activate_name(), target);
  }

  // required string activate_code = 3;
  if (has_activate_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->activate_code().data(), this->activate_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "activate_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->activate_code(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.caredear.ActivateRequest)
  return target;
}

int ActivateRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .com.caredear.RegLoginType activate_type = 1;
    if (has_activate_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->activate_type());
    }

    // required string activate_name = 2;
    if (has_activate_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->activate_name());
    }

    // required string activate_code = 3;
    if (has_activate_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->activate_code());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivateRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActivateRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActivateRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ActivateRequest::MergeFrom(const ActivateRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_activate_type()) {
      set_activate_type(from.activate_type());
    }
    if (from.has_activate_name()) {
      set_activate_name(from.activate_name());
    }
    if (from.has_activate_code()) {
      set_activate_code(from.activate_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ActivateRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivateRequest::CopyFrom(const ActivateRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivateRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ActivateRequest::Swap(ActivateRequest* other) {
  if (other != this) {
    std::swap(activate_type_, other->activate_type_);
    std::swap(activate_name_, other->activate_name_);
    std::swap(activate_code_, other->activate_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ActivateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActivateRequest_descriptor_;
  metadata.reflection = ActivateRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ActivateResponse::kResultCodeFieldNumber;
const int ActivateResponse::kExtraMsgFieldNumber;
const int ActivateResponse::kCaredearIdFieldNumber;
#endif  // !_MSC_VER

ActivateResponse::ActivateResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.caredear.ActivateResponse)
}

void ActivateResponse::InitAsDefaultInstance() {
}

ActivateResponse::ActivateResponse(const ActivateResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:com.caredear.ActivateResponse)
}

void ActivateResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  result_code_ = 0;
  extra_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  caredear_id_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ActivateResponse::~ActivateResponse() {
  // @@protoc_insertion_point(destructor:com.caredear.ActivateResponse)
  SharedDtor();
}

void ActivateResponse::SharedDtor() {
  if (extra_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete extra_msg_;
  }
  if (this != default_instance_) {
  }
}

void ActivateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ActivateResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ActivateResponse_descriptor_;
}

const ActivateResponse& ActivateResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_UserActivation_2eproto();
  return *default_instance_;
}

ActivateResponse* ActivateResponse::default_instance_ = NULL;

ActivateResponse* ActivateResponse::New() const {
  return new ActivateResponse;
}

void ActivateResponse::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ActivateResponse*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 7) {
    ZR_(caredear_id_, result_code_);
    if (has_extra_msg()) {
      if (extra_msg_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        extra_msg_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ActivateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.caredear.ActivateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 result_code = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_code_)));
          set_has_result_code();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_extra_msg;
        break;
      }

      // optional string extra_msg = 2;
      case 2: {
        if (tag == 18) {
         parse_extra_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_extra_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->extra_msg().data(), this->extra_msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "extra_msg");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_caredear_id;
        break;
      }

      // optional uint64 caredear_id = 3;
      case 3: {
        if (tag == 24) {
         parse_caredear_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &caredear_id_)));
          set_has_caredear_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.caredear.ActivateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.caredear.ActivateResponse)
  return false;
#undef DO_
}

void ActivateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.caredear.ActivateResponse)
  // required int32 result_code = 1;
  if (has_result_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result_code(), output);
  }

  // optional string extra_msg = 2;
  if (has_extra_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extra_msg().data(), this->extra_msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extra_msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->extra_msg(), output);
  }

  // optional uint64 caredear_id = 3;
  if (has_caredear_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->caredear_id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.caredear.ActivateResponse)
}

::google::protobuf::uint8* ActivateResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.caredear.ActivateResponse)
  // required int32 result_code = 1;
  if (has_result_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result_code(), target);
  }

  // optional string extra_msg = 2;
  if (has_extra_msg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->extra_msg().data(), this->extra_msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "extra_msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->extra_msg(), target);
  }

  // optional uint64 caredear_id = 3;
  if (has_caredear_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->caredear_id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.caredear.ActivateResponse)
  return target;
}

int ActivateResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 result_code = 1;
    if (has_result_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->result_code());
    }

    // optional string extra_msg = 2;
    if (has_extra_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->extra_msg());
    }

    // optional uint64 caredear_id = 3;
    if (has_caredear_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->caredear_id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ActivateResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ActivateResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ActivateResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ActivateResponse::MergeFrom(const ActivateResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_result_code()) {
      set_result_code(from.result_code());
    }
    if (from.has_extra_msg()) {
      set_extra_msg(from.extra_msg());
    }
    if (from.has_caredear_id()) {
      set_caredear_id(from.caredear_id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ActivateResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActivateResponse::CopyFrom(const ActivateResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActivateResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ActivateResponse::Swap(ActivateResponse* other) {
  if (other != this) {
    std::swap(result_code_, other->result_code_);
    std::swap(extra_msg_, other->extra_msg_);
    std::swap(caredear_id_, other->caredear_id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ActivateResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ActivateResponse_descriptor_;
  metadata.reflection = ActivateResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace caredear
}  // namespace com

// @@protoc_insertion_point(global_scope)
